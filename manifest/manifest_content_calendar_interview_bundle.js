window.BaseInterviewSupportedSite=window.BaseInterviewSupportedSite||(window=>{class BaseInterviewSupportedSite extends LoggableClass{constructor(pageType,config){super(!1),this._config=config,this.CANDIDATE_SHORTLINK_URL_MATCH_RE=/https:\/\/(linkr|l)\.(indeed\.com|sandbox\.qa\.indeed\.net)\/[^\/]+\//gi,this.INTERVIEW_URL_MATCH_RE=/https:\/\/interviews\.(sandbox\.)?(qa\.)?indeed\.(net|com)\/(employers\/)?events\/[^\/]+\//gi,this.PAGE_TYPE=pageType,this.cssClass=null,this._debug=!1,this._resetPageInfo(),this.log("New interview supported type created",pageType)}_resetPageInfo(){this.$parent,this.createBtnInsertFn,this.joinBtnInsertFn,this.getInterviewInfoFn,this.setInterviewBodyTextFn,this.removeInterviewBodyTextFn,this.poll=!0,this.interviewUrl=null,this.showCreateButton=!1,this.showDeleteButton=!1,this.showCreateButtonRow=!1}get pageInfo(){return{$parent:this.$parent,poll:this.poll,interviewUrl:this.interviewUrl,cssClass:this.cssClass,pageType:this.PAGE_TYPE,showCreateButton:this.showCreateButton,showCreateButtonRow:this.showCreateButtonRow,showDeleteButton:this.showDeleteButton,createBtnInsertFn:this.createBtnInsertFn?this.createBtnInsertFn.bind(this):null,joinBtnInsertFn:this.joinBtnInsertFn?this.joinBtnInsertFn.bind(this):null,getInterviewInfoFn:this.getInterviewInfoFn?this.getInterviewInfoFn.bind(this):null,setInterviewBodyTextFn:this.setInterviewBodyTextFn?this.setInterviewBodyTextFn.bind(this):null,removeInterviewBodyTextFn:this.removeInterviewBodyTextFn?this.removeInterviewBodyTextFn.bind(this):null}}showJoinButton(interviewUrl){return!0}update(){throw new Error("Must implement")}static matchesUrl(){throw new Error("Must Implement")}_stripInterviewLinks(html){const urlMatchStr="([a-z0-9:\\/.?&_=;%-])+";let removeCandidateLinkRe=new RegExp('(<b>)?Candidate Link:(</b>)? (<a href="'+urlMatchStr+'">)?('+this.CANDIDATE_SHORTLINK_URL_MATCH_RE.source+"){1}(</a>)?(<br>)*","gi");this.log("removeCandidateLinkRe",removeCandidateLinkRe.source);let removeInterviewerLinkRe=new RegExp('(<b>)?Interviewer Link:(</b>)? (<a href="'+urlMatchStr+'">)?('+this.INTERVIEW_URL_MATCH_RE.source+"){1}(</a>)?(<br>)*","gi");this.log("removeInterviewerLinkRe",removeInterviewerLinkRe.source);const removeTosLineRe=new RegExp('By continuing, you agree to our (<a href="'+urlMatchStr+'">)?Terms, Cookies, &amp; Privacy Policies(</a>)?.(<br>)*',"gi"),removeJoiningLineRe=new RegExp('(<a href="'+urlMatchStr+'">)?Joining Instructions(</a>)?.(<br>)*',"gi"),strippedhtml=html.replace(removeCandidateLinkRe,"").replace(removeInterviewerLinkRe,"").replace(/If prompted, please click (<b>)?Sign in with Google(<\/b>)? using your Indeed email.(<br>)*/gi,"").replace(removeTosLineRe,"").replace(removeJoiningLineRe,"");return this.log("New HTML after strip links",strippedhtml),strippedhtml}}return BaseInterviewSupportedSite})(window),window.GCalInterviewSite=window.GCalInterviewSite||(window=>{class GCalInterviewSite extends BaseInterviewSupportedSite{constructor(config){super(GCalInterviewSite.pageType,config),this.WITH_ZOOM_WIDTH=700,this._setButtonClass(),this.update()}static get pageType(){return"google"}static matchesUrl(){return/https:\/\/calendar\.google\.com\/calendar\/.+/.test(window.location.href)}_setButtonClass(extra){this.cssClass="irx_google_interview_btn"}showJoinButton(interviewUrl){return!$(`a[href*="${interviewUrl}"]:contains("Join Indeed Interview")`).length}update(){this._resetPageInfo();const C=this._config.gcal;let $modalElem=$(C.modal.type).find(C.modal.title);if($modalElem.length>0){this.log("Detected Modal view (new or existing event)"),this.$parent=$modalElem.first().closest(C.modal.type);const getSaveBtn=()=>this.$parent.find(C.button.type).filter(C.button.save);let $saveBtn=getSaveBtn(),eventSelected=this.$parent.find(C.event.selected).length||0===this.$parent.find(C.event.eventTab).length;$saveBtn.length&&eventSelected&&(this.showCreateButton=!0,this.createBtnInsertFn=buttonHtml=>{const $saveBtn=getSaveBtn();if($saveBtn.length){$saveBtn.after(buttonHtml);try{const $modalInterior=this.$parent.find(C.modal.inside);$modalInterior.find(C.button.zoom).length&&$modalInterior[0].setAttribute("style",`min-width: ${this.WITH_ZOOM_WIDTH="700"}px !important`)}catch(e){this.log("Error making modal wide to fit with Zoom button!")}}else this.log("Not adding 'Create' button to page, 'Save' button is not present")}),this.joinBtnInsertFn=buttonHtml=>{const $locBtn=this.$parent.find(C.modal.sub.location),$modalInterior=this.$parent.find(C.modal.inside);if($locBtn.length){const $expandableRow=$locBtn.closest(C.modal.sub.expandable);$expandableRow.length?$expandableRow.before(buttonHtml):this.log("Not adding interview join button, no location/rooms expandable row")}else if($modalInterior.length){const $titleRow=$modalInterior.find(C.modal.sub.titleRow);$titleRow.length?$titleRow.after(buttonHtml):this.log("Not adding interview join button, cant find title row")}else this.log("Not adding interview join button, no location button or modal interior")},this.getInterviewInfoFn=()=>{let date=this.$parent.find(C.modal.sub.startDate).text();date=date.split(", "),date.shift();let year=1===date.length?(new Date).getFullYear():date.pop(),addTimeBtn=this.$parent.find(C.modal.sub.addTime),addTimeButtonExists=!!addTimeBtn&&addTimeBtn.length>0,startTime=this.$parent.find(C.modal.sub.startTime).text(),endTime=this.$parent.find(C.modal.sub.endTime).text(),title=this.$parent.find(C.modal.title).val();const[timezone,gmtOffset]=this._getTimezoneInfo(this.$parent);return{date:date[0],startTime,endTime,year,title,timezone,gmtOffset,addTimeButtonExists}}}else(window.location.pathname.split("/").includes("eventedit")||$(C.page.type).length)&&(this.log("Detected full-page window for event edit"),this.$parent=$(C.page.type).find(C.page.details),this.$parent.length&&(this.$parent=this.$parent.parent(),this.$parent=this.$parent.parent()),this.showCreateButtonRow=!0,this.showDeleteButton=!0,this.createBtnInsertFn=this.joinBtnInsertFn=buttonHtml=>{$(C.page.tabPanel).first().prepend(buttonHtml)},this.getInterviewInfoFn=()=>{const $top=this.$parent.closest(C.page.roleMain);let date,year,dateVal=$top.find(C.page.interior.startDate).val();dateVal&&([date,year]=dateVal.split(","));let startTime=$top.find(C.page.interior.startTime).val(),endTime=$top.find(C.page.interior.endTime).val(),title=$top.find(C.page.interior.title).val();const[timezone,gmtOffset]=this._getTimezoneInfo(this.$parent.closest(C.page.interior.isCreate));return{date,startTime,endTime,year,title,timezone,gmtOffset}});this.removeInterviewBodyTextFn=cb=>{let $descBtn=this.$parent.find(C.event.description);$descBtn.length&&$descBtn.click(),setTimeout((()=>{let $editable=this.$parent.find(C.event.editableDescription);if($editable.length){let $blob=$editable.children(C.event.editableBlob);$editable.html(this._stripInterviewLinks(($blob.length?$blob:$editable)[0].innerHTML)),cb(!0)}else cb(!1)}).bind(this),500)},this.setInterviewBodyTextFn=(html,cb)=>{let $descBtn=this.$parent.find(C.event.descButton);$descBtn.length&&$descBtn.click(),setTimeout((()=>{let $editable=this.$parent.find(C.event.editableDescription);$editable.length?($editable.prepend(html),$editable[0].dispatchEvent(new Event("keyup",{bubbles:!0})),cb(!0)):(this.log("Unable to copy link to calendar text, $editable element not found"),cb(!1))}),500)}}_getTimezoneInfo($parent){const C=this._config.gcal;let timezone,gmtOffset;try{const tzData=JSON.parse(document.getElementById(C.event.txData).textContent)[0],tzRe=/^\(GMT([+-])([0-9]{1,2}):([0-9]{2})\)\s.+$/i;let $tzButton=$parent.find("span,div").not(":has(*)").filter((function(){let content=this.innerText;return tzRe.test(content)}));if($tzButton.length>0){let tzString=$tzButton[0].innerText,tzObj=tzData.find((tzi=>tzi[1]==tzString));if(tzObj){timezone=tzObj[0];let match=tzString.match(tzRe);gmtOffset=60*(parseInt(match[3],10)+60*parseInt(match[2],10))*1e3,"-"===match[1]&&(gmtOffset=0-gmtOffset)}}else timezone||(timezone=$("#xTimezone").text()),gmtOffset||(gmtOffset=$("#xGmtOffset").text())}catch(e){this.log("Error getting timezones",e)}return this.log("Timezone info: ",timezone,gmtOffset),[timezone,gmtOffset]}}return GCalInterviewSite})(window),(async globals=>{const TEMPLATES=globals.TEMPLATES,RELAY=globals.RELAY,UI=globals.UI,$=globals.$,CREATE_BUTTON_ID="zapinfo_create_interview_button",JOIN_BUTTON_ID="zapinfo_join_interview_button";class Interview extends PageFeatureBaseClass{#pageInfoInstance;#pageInfo=null;constructor(showReminder,configTemplate){super("interview",!1,100,configTemplate),this._init(showReminder)}#getInfoForPage(){let pageInfo;if(this.#pageInfoInstance?this.#pageInfoInstance.update():globals.GCalInterviewSite.matchesUrl()&&(this.#pageInfoInstance=new globals.GCalInterviewSite(this._configTemplate)),this.#pageInfoInstance){if(pageInfo=this.#pageInfoInstance.pageInfo,pageInfo.$parent&&pageInfo.$parent.length){const interviewUrlMatch=pageInfo.$parent[0].innerHTML.match(this.#pageInfoInstance.INTERVIEW_URL_MATCH_RE);interviewUrlMatch&&interviewUrlMatch.length&&(pageInfo.interviewUrl=interviewUrlMatch[0])}pageInfo.interviewUrl&&(pageInfo.showJoinButton=this.#pageInfoInstance.showJoinButton(pageInfo.interviewUrl))}return this.logNoStore("Info Results",pageInfo),pageInfo}#removeExisting(explicitId){let ids=`#${CREATE_BUTTON_ID}, #${JOIN_BUTTON_ID}`;explicitId&&(ids=`#${explicitId}, #${explicitId}_row`),$(ids).remove()}async _uiChange(){this.#pageInfo=this.#getInfoForPage();const pgInfo=this.#pageInfo;let $existingCreateBtn=$("#"+CREATE_BUTTON_ID),$existingJoinBtn=$("#"+JOIN_BUTTON_ID);if(this.log("DRAW INTERVAL",$existingCreateBtn,$existingJoinBtn),!pgInfo||!pgInfo.$parent)return this.#removeExisting(),this.log("No draw, wrapper not present");if(this.log(`showCreateButton/Row: ${pgInfo.showCreateButton?"1":"0"} ${pgInfo.showCreateButtonRow?"1":"0"}`,pgInfo.interviewUrl),!pgInfo.showCreateButton&&!pgInfo.showCreateButtonRow||pgInfo.interviewUrl)$existingCreateBtn.length&&this.#removeExisting(CREATE_BUTTON_ID);else if($existingCreateBtn.length)pgInfo.interviewUrl&&this.#removeExisting(CREATE_BUTTON_ID);else{const buttonId=Date.now(),tdata={cssClass:pgInfo.cssClass,iconUrl:globals.UTILS.extensionUrl("images/indeed_i_blue.svg"),videoIconUrl:globals.UTILS.extensionUrl("images/video_icon.svg"),id:CREATE_BUTTON_ID,disabled:!!pgInfo.interviewUrl,cssDisabledClass:"zi_disabled",meta:pgInfo.createButtonMeta,buttonId},html=await TEMPLATES.build("create_interview_button"+(pgInfo.showCreateButtonRow?"_row":""),tdata);this.log("Add Create btn HTML",html),this.#removeExisting(CREATE_BUTTON_ID),pgInfo.createBtnInsertFn(html),this.markUiImpression(buttonId,"create_button",pgInfo.pageType,"calendar")}if(!$existingJoinBtn.length&&pgInfo.interviewUrl&&pgInfo.showJoinButton){const buttonId=globals.UTILS.stringHashCyrb53(pgInfo.interviewUrl),tdata={buttonId,cssClass:pgInfo.cssClass,indeedIconUrl:globals.UTILS.extensionUrl("images/indeed_i.svg"),videoIconUrl:globals.UTILS.extensionUrl("images/video_icon.svg"),id:JOIN_BUTTON_ID,showDeleteButton:pgInfo.showDeleteButton,interviewUrl:pgInfo.interviewUrl,interviewGuid:this.#guidFromInterviewUrl(pgInfo.interviewUrl)},html=await TEMPLATES.build("join_interview_button",tdata);this.log("Add Join btn HTML",html),this.#removeExisting(JOIN_BUTTON_ID),pgInfo.joinBtnInsertFn(html),this.markUiImpression(buttonId,"join_button",pgInfo.pageType,"calendar")}}#guidFromInterviewUrl(url){return/([0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12})/i.exec(url)[0]}async#createInterview(){let interviewInfo=this.#pageInfo.getInterviewInfoFn();this.log("Info for interview",interviewInfo);let errors=[];if(interviewInfo.timezone&&interviewInfo.gmtOffset||(this.log("Missing timezone or gmtOffset!"),errors.push("Unable to load your timezone -- please contact support.")),interviewInfo.date||(this.log("Missing date for info!"),errors.push("Unable to read date or time -- please contact support.")),interviewInfo.year||(this.log("Missing year for info!"),errors.push("Unable to read date or time -- please contact support.")),!0===interviewInfo.addTimeButtonExists?(this.log("Missing start and end time info!"),errors.push("You must add a time for the Interview.")):(interviewInfo.startTime||(this.log("Missing startTime for info!"),errors.push("Unable to read date or time -- please contact support.")),interviewInfo.endTime||(this.log("Missing endTime for info!"),errors.push("Unable to read date or time -- please contact support."))),interviewInfo.title||(this.log("Missing title for info!"),errors.push("You must fill out the event title for the Interview")),errors.length)return this._error(errors);UI.loading("Generating Interview link"),interviewInfo.language=navigator.language,this._setApiCallTimer(),RELAY.send("generate.interview",RELAY.levels.iframe,{info:interviewInfo,pageType:this.#pageInfo.pageType})}#deleteInterview(guid){UI.loading("Deleting interview"),this.log("Delete interview by guid",guid),RELAY.send("delete.interview",RELAY.levels.iframe,{guid,pageType:this.#pageInfo.pageType})}_bindEvents(){$(document.body).on("click.zapinfo",`#${CREATE_BUTTON_ID}`,(e=>{globals.CONTENT_UTILS.isOrphaned||(e.stopImmediatePropagation(),e.preventDefault(),$(e.target).closest(`#${CREATE_BUTTON_ID}`).hasClass("zi_disabled")||this.#createInterview())})).on("click.zapinfo","#zapinfo_delete_interview_button",(e=>{globals.CONTENT_UTILS.isOrphaned||(e.stopImmediatePropagation(),e.preventDefault(),this.#deleteInterview($(e.target).closest(`#${JOIN_BUTTON_ID}`).data("guid")))})).on("click.zapinfo",`#${JOIN_BUTTON_ID} .indeed_interview_join_btn`,(e=>{if(globals.CONTENT_UTILS.isOrphaned)return;const btnId=$(e.target).data("irx-id");this.markUiButtonClick(btnId,"join",this.#pageInfo.pageType,"calendar")}))}_cleanupUi(){let $existing=$("#"+CREATE_BUTTON_ID);$existing.length&&$existing.remove()}async#interviewGenerated(data){this._clearApiCallTimer();const html=await TEMPLATES.build("interview_body_text",data);this.log("Interview body text generated:",html);const backupText=[`Candidate URL: ${data.candidate_short_url}\n`,`Interviewer URL: ${data.lobby_url}\n`].join("\n");this.#pageInfo.setInterviewBodyTextFn(html,(descriptionUpdated=>{descriptionUpdated||RELAY.localSend("copy.clipboard",{value:backupText});let msg1="Interview created on Indeed. ";msg1+="Note that the start time & date of this interview does not update on Indeed if you update this cal invite, ",msg1+="and must be updated manually on Indeed.\n\n";let notifications=["Interview created on Indeed. Note that the start time & date of this interview does not update on Indeed if you update this cal invite, and must be updated manually on Indeed.\n\n"];descriptionUpdated?notifications.push("Access URLs have been copied to the cal description, please save the cal invite."):notifications.push("We were unable to insert interview URLs into event description, and they have been copied to your clipboard"),this._notification(notifications)}))}#interviewDeleted(data){if(this._clearApiCallTimer(),!data.deleted){this.log("Unable to delete interview",data);let errs=["Unable to remove the interview details. Manually delete the interview details from your event."];return errs.push(data.message),this._error(errs)}this.log("Interview successfully deleted",data),this.#pageInfo.removeInterviewBodyTextFn((success=>{$("#"+JOIN_BUTTON_ID).remove();let notifications=["This interview has been successfully deleted from indeed."];notifications.push("We attempted to remove the invite text from your calendar description - please review and validate all invite text is removed, then save this invite."),this._notification(notifications)}))}async _init(reminderSeen){if(this._shouldInitialize&&(this.reset(),RELAY.on("errors.interview",(data=>{this._clearApiCallTimer(),this._error(data.errors)})),RELAY.on("generated.interview",this.#interviewGenerated.bind(this)),RELAY.on("deleted.interview",this.#interviewDeleted.bind(this)),!reminderSeen)){const html=await TEMPLATES.build("interview_getting_started");UI.modal(html)}}}globals.Interview=Interview})(IRX),(async globals=>{let _forCopySelectInput=input=>{if("div"==input.tagName.toLowerCase()){let range=document.createRange();range.selectNodeContents(input);let sel=window.getSelection();sel.removeAllRanges(),sel.addRange(range)}else input.select()};function _copyToClipboard(val){let input=((isHtml,val=null,copy=!1)=>{let input,hideStyle="width:0; height: 0; overflow: hidden;";return isHtml?(input=document.createElement("div"),input.contentEditable=!0,input.innerHTML=val,input.setAttribute("style",hideStyle),document.body.appendChild(input),input.focus(),_forCopySelectInput(input)):(input=document.createElement("textarea"),input.setAttribute("style",hideStyle),input.value=val,document.body.appendChild(input),input.focus(),_forCopySelectInput(input)),copy?document.execCommand("copy"):document.execCommand("paste"),input})(/<br[\/]?>|<p>|<span>|<b>|<i>/i.test(val),val,!0);input.remove()}globals.RELAY.on("copy.clipboard",(data=>{_copyToClipboard(data.value)}))})(IRX),(async globals=>{const state=globals.STATE||new globals.ContentState;try{await state.setup()}catch(e){return console.error(e)}let irxInterview,configTemplate;globals.CONTENT_UTILS.onOrphaned((()=>{console.info("Content script orphaned, removing interview functionality!"),irxInterview&&(irxInterview.cleanup(),irxInterview=null)})),state.onUserChange((async(loggedIn,userInfo)=>{if(globals.CONTENT_UTILS.isOrphaned)return;if(irxInterview&&irxInterview.cleanup(),!loggedIn)return irxInterview&&irxInterview.cleanup(),void(irxInterview=null);const{proctorGroups,preferences,reminders}=userInfo;if(console.info("onUserChange: logged In!",proctorGroups,preferences,reminders),!preferences.interviewEnabled)return void console.info("IRX interview not enabled, turned off in preferences");let reminderSeen=!0===reminders.interviewGettingStarted;console.info("IRX Interview initialize, user logged in! Reminder seen? ",reminderSeen);try{configTemplate=configTemplate||await globals.configTemplates.get("interview",!1)}catch(e){return console.error(e)}irxInterview=new globals.Interview(reminderSeen,configTemplate),reminderSeen||state.markReminderSeen("interviewGettingStarted")})),globals.STATE=state})(IRX);
//# sourceMappingURL=manifest_content_calendar_interview_bundle.js.map
